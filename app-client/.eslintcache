[{"/Users/joesummerhayes/projects/games-vault/app-client/src/index.tsx":"1","/Users/joesummerhayes/projects/games-vault/app-client/src/reportWebVitals.ts":"2","/Users/joesummerhayes/projects/games-vault/app-client/src/App.tsx":"3","/Users/joesummerhayes/projects/games-vault/app-client/src/theme.ts":"4","/Users/joesummerhayes/projects/games-vault/app-client/src/views/Review.tsx":"5","/Users/joesummerhayes/projects/games-vault/app-client/src/components/Nav.tsx":"6","/Users/joesummerhayes/projects/games-vault/app-client/src/components/Slider.tsx":"7","/Users/joesummerhayes/projects/games-vault/app-client/src/components/Title.tsx":"8","/Users/joesummerhayes/projects/games-vault/app-client/src/dummy-data/game1.tsx":"9","/Users/joesummerhayes/projects/games-vault/app-client/src/dummy-data/Game.tsx":"10","/Users/joesummerhayes/projects/games-vault/app-client/src/history.ts":"11","/Users/joesummerhayes/projects/games-vault/app-client/src/views/Login.tsx":"12","/Users/joesummerhayes/projects/games-vault/app-client/src/utils/validation.ts":"13","/Users/joesummerhayes/projects/games-vault/app-client/src/views/Signup.tsx":"14"},{"size":500,"mtime":1612009816057,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1612009816059,"results":"17","hashOfConfig":"16"},{"size":1283,"mtime":1612892934352,"results":"18","hashOfConfig":"16"},{"size":162,"mtime":1612892599716,"results":"19","hashOfConfig":"16"},{"size":905,"mtime":1612010985320,"results":"20","hashOfConfig":"16"},{"size":694,"mtime":1612010963317,"results":"21","hashOfConfig":"16"},{"size":1107,"mtime":1612010963317,"results":"22","hashOfConfig":"16"},{"size":1030,"mtime":1612010963318,"results":"23","hashOfConfig":"16"},{"size":2464,"mtime":1612010978340,"results":"24","hashOfConfig":"16"},{"size":360,"mtime":1612010978339,"results":"25","hashOfConfig":"16"},{"size":88,"mtime":1612648255728,"results":"26","hashOfConfig":"16"},{"size":5046,"mtime":1612977104663,"results":"27","hashOfConfig":"16"},{"size":1339,"mtime":1612700850473,"results":"28","hashOfConfig":"16"},{"size":5920,"mtime":1612892903716,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1paievo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},"/Users/joesummerhayes/projects/games-vault/app-client/src/index.tsx",[],["64","65"],"/Users/joesummerhayes/projects/games-vault/app-client/src/reportWebVitals.ts",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/App.tsx",["66"],"import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { Review } from './views/Review';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core'\nimport history from './history';\nimport { Nav } from './components/Nav';\nimport {colors} from './theme';\nimport { Login } from './views/Login';\nimport Signup from './views/Signup';\n\n\nconst useStyles = makeStyles({\n  conatiner: {\n    minHeight: '100vh',\n    background: 'white',\n    fontFamily: 'Quicksand, sans-serif',\n    width: '100%'\n  },\n  root: {\n    background: colors.white,\n    marginBottom: '7rem'\n  }\n})\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Router history={history}>\n      <div className={classes.root}>\n        <Nav />\n        <Container maxWidth=\"md\" style={{paddingRight: '32px', paddingLeft: '32px'}}>\n          <div className={`${classes.conatiner}`}>\n            <header className=\"App-header\">\n            </header>\n            <Route expact component={Review} path=\"/review\" />\n            <Route exact component={Login} path=\"/login\" />\n            <Route exact component={Signup} path=\"/signup\" />\n          </div>\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/joesummerhayes/projects/games-vault/app-client/src/theme.ts",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/views/Review.tsx",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/components/Nav.tsx",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/components/Slider.tsx",["67","68","69","70","71","72"],"import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport { game1 } from '../dummy-data/game1';\nimport Box from '@material-ui/core/Box';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport {colors} from \"../theme\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport './slider.css';\n\nconst useStyles = makeStyles({})\n\nexport const SliderComponent = () => {\n    const classes = useStyles();\n\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n    };\n\n    return (\n      <Box>\n        <Slider {...settings}>\n          <div>\n            <img src={game1.image[0]} style={{width: '100%' }} />\n          </div>\n          {/* <div>\n            <img src={game1.image[1]} style={{width: '100%' }} />\n          </div> */}\n          <div>\n            <img src={game1.image[2]} style={{width: '100%' }} />\n          </div>\n          <div>\n            <img src={game1.image[3]} style={{width: '100%' }} />\n          </div>\n        </Slider>\n      </Box>\n    );\n  }","/Users/joesummerhayes/projects/games-vault/app-client/src/components/Title.tsx",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/dummy-data/game1.tsx",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/dummy-data/Game.tsx",[],["73","74"],"/Users/joesummerhayes/projects/games-vault/app-client/src/history.ts",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/views/Login.tsx",["75","76","77","78"],"import React, { ReactElement } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, Box, Typography, Button } from '@material-ui/core';\nimport Arrow from '@material-ui/icons/ArrowForward';\nimport MuiAlert from '@material-ui/lab/Alert';\n// import { loginAction } from '../actions/index';\nimport { required, email } from '../utils/validation';\nimport {colors} from '../theme';\n// import hero from '../images/loginHero.png';\n// import Button from './components/Button';\n// import { AppState } from '../app-state';\n\n\nexport interface FormItem {\n  value: string;\n  touched: boolean;\n  valid: boolean;\n  validators: Validator[];\n}\nexport interface Validator {\n  (arg: string): boolean;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    width: '40%',\n  },\n  inputField: {\n    paddingTop: '1rem',\n  },\n  submitButton: {\n    margin: '1rem 0 1rem 0',\n    backgroundColor: 'black',\n    color: 'white',\n    borderRadius: 'inherit',\n  },\n  box: {\n    backgroundColor: '#d4ebf2',\n    // backgroundImage: `url(${hero})`,\n    height: '100vh',\n    width: '100vw',\n    backgroundSize: '100%',\n    backgroundRepeat: 'no-repeat',\n  },\n  inputText: {\n    color: 'black',\n  },\n  textField: {\n    backgroundColor: 'rgba(343, 342, 324, 0.5)',\n  },\n  helperActions: {\n    paddingBottom: '1rem',\n    letterSpacing: '0.1px',\n  },\n  arrowIcon: {\n    height: '0.7em',\n  },\n  header: {\n    fontSize: '1.5rem',\n    letterSpacing: '0.1px',\n  },\n});\n\nexport const Login: React.FC = () => {\n\n  const [form, setForm] = React.useState<Record<string, FormItem>>({\n    email: {\n      touched: false,\n      valid: false,\n      value: '',\n      validators: [required, email],\n    },\n    password: {\n      touched: false,\n      valid: false,\n      value: '',\n      validators: [required],\n    },\n  });\n  const classes = useStyles();\n  // const dispatch = useDispatch();\n  // const isError = useSelector((state: AppState) => state.error);\n\n  const loginUser = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    e.preventDefault();\n    const formValues = {\n      email: form.email.value,\n      password: form.password.value,\n    };\n    // dispatch(loginAction(formValues));\n  };\n\n  const blurHandler = (inputField: string): void => {\n    setForm({\n      ...form,\n      [inputField]: {\n        ...form[inputField],\n        touched: true,\n      },\n    });\n  };\n\n  const handleError = (): ReactElement | void => {\n    // if (isError?.errorLocation === 'login') {\n    //   return <MuiAlert severity=\"error\">{isError.specificError}</MuiAlert>;\n    // }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { target } = event;\n    const { value } = target;\n    const { id } = target;\n    let isInputValid = true;\n    // form[id].validators.map((validator: FFType.Validator): void => {\n    //   isInputValid = isInputValid && validator(value);\n    // });\n\n    const updatedForm = {\n      ...form,\n      [id]: {\n        ...form[id],\n        valid: isInputValid,\n        value,\n      },\n    };\n\n    setForm(updatedForm);\n  };\n\n  return (\n    <Box display=\"flex\" className={classes.box}>\n      <form className={classes.root}>\n        <Typography className={classes.header}>\n          Sign In\n        </Typography>\n        <div className={classes.inputField}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            value={form.email.value}\n            label=\"Email\"\n            InputLabelProps={{ className: classes.inputText }}\n            onChange={handleInputChange}\n            onBlur={(): void => blurHandler('email')}\n            id=\"email\"\n            helperText={form.email.touched && !form.email.valid ? 'Must provide an email' : ''}\n            error={form.email.touched && !form.email.valid}\n            className={classes.textField}\n          />\n        </div>\n        <div className={classes.inputField}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            value={form.password.value}\n            label=\"Password\"\n            InputLabelProps={{ className: classes.inputText }}\n            onChange={handleInputChange}\n            onBlur={(): void => blurHandler('password')}\n            id=\"password\"\n            type=\"password\"\n            helperText={form.password.touched && !form.password.valid ? 'Enter your password' : ''}\n            error={form.password.touched && !form.password.valid}\n            className={classes.textField}\n          />\n        </div>\n        {handleError()}\n        {/* <Button text=\"Login\" clickHandler={loginUser} className={classes.submitButton} /> */}\n        <Button> Hello</Button>\n        <Typography className={classes.helperActions}>\n          Forgot your password?\n          <Arrow className={classes.arrowIcon} />\n        </Typography>\n        <Typography className={classes.helperActions}>\n          Sign up?\n          <Arrow className={classes.arrowIcon} />\n        </Typography>\n      </form>\n    </Box>\n  );\n};\n","/Users/joesummerhayes/projects/games-vault/app-client/src/utils/validation.ts",[],"/Users/joesummerhayes/projects/games-vault/app-client/src/views/Signup.tsx",["79","80"],"import React, { ReactElement } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport TextField from '@material-ui/core/TextField';\nimport { Box } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { required, length, email, confirmPass } from '../utils/validation';\n// import { createUserAction } from '../actions/index';\nimport { FormItem, Validator } from './Login';\n\nconst useStyles = makeStyles({\n  root: {\n    margin: 'auto',\n    width: '50%',\n  },\n  inputField: {\n    paddingTop: '1rem',\n  },\n  submitButton: {\n    marginTop: '1rem',\n  },\n});\n\nconst Signup = (): ReactElement => {\n  // const dispatch = useDispatch();\n  const classes = useStyles();\n  // const isError = useSelector((state: any) => state.error);\n  const [formIsValid, validateForm] = React.useState(false);\n  const [form, setForm] = React.useState<Record<string, FormItem>>({\n    name: {\n      value: '',\n      touched: false,\n      valid: false,\n      validators: [required],\n    },\n    email: {\n      value: '',\n      touched: false,\n      valid: false,\n      validators: [required, email],\n    },\n    password: {\n      value: '',\n      touched: false,\n      valid: false,\n      validators: [required, length({ min: 5 })],\n    },\n    confirmPass: {\n      value: '',\n      touched: false,\n      valid: false,\n      validators: [required, length({ min: 5 })],\n    },\n  });\n\n  const blurHandler = (inputField: string): void => {\n    setForm({\n      ...form,\n      [inputField]: {\n        ...form[inputField],\n        touched: true,\n      },\n    });\n  };\n\n  const handleError = (): ReactElement | void => {\n    // if (isError.errorLocation === 'createUser') {\n    //   return <MuiAlert severity=\"error\">{isError.specificError}</MuiAlert>;\n    // }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    const { target } = event;\n    const input = target.getAttribute('id') || '';\n    const { value } = target;\n    let isInputValid = true;\n\n    form[input].validators.map((validator: Validator): void => {\n      isInputValid = isInputValid && validator(value);\n    });\n\n    if (input === 'confirmPass') {\n      isInputValid = isInputValid && confirmPass(form.password.value, value);\n    }\n\n    const updatedForm = {\n      ...form,\n      [input]: {\n        ...form[input],\n        valid: isInputValid,\n        value,\n      },\n    };\n\n    const formEntries: [string, FormItem][] = Object.entries(updatedForm);\n\n    const validations = formEntries.map((item: [string, FormItem]) => {\n      return item[1].valid;\n    });\n    const reducer = (acc: boolean, item: boolean): boolean => {\n      if (acc && item) {\n        return item;\n      }\n      return false;\n    };\n\n    const isFormValid = validations.reduce(reducer, true);\n\n    validateForm(isFormValid);\n    setForm(updatedForm);\n  };\n\n  return (\n    <Box display=\"flex\">\n      <form\n        className={classes.root}\n        onSubmit={(e: React.FormEvent<HTMLFormElement>): void => {\n          e.preventDefault();\n          if (formIsValid) {\n            // dispatch(\n            //   createUserAction({\n            //     name: form.name.value,\n            //     email: form.email.value,\n            //     password: form.password.value,\n            //   }),\n            // );\n          }\n        }}\n      >\n        <div className={classes.inputField}>\n          <TextField\n            id=\"name\"\n            variant=\"outlined\"\n            placeholder=\"name\"\n            value={form.name.value}\n            onChange={handleInputChange}\n            onBlur={(): void => blurHandler('name')}\n            error={form.name.touched && !form.name.valid}\n            required\n            fullWidth\n            helperText={form.name.touched && !form.name.valid ? 'Must provide user name' : ''}\n          />\n        </div>\n        <div className={classes.inputField}>\n          <TextField\n            id=\"email\"\n            variant=\"outlined\"\n            placeholder=\"email address\"\n            value={form.email.value}\n            onChange={handleInputChange}\n            onBlur={(): void => blurHandler('email')}\n            error={form.email.touched && !form.email.valid}\n            required\n            fullWidth\n            helperText={form.email.touched && !form.email.valid ? 'Must provide a valid email address' : ''}\n          />\n        </div>\n        <div className={classes.inputField}>\n          <TextField\n            id=\"password\"\n            variant=\"outlined\"\n            placeholder=\"password\"\n            value={form.password.value}\n            onChange={handleInputChange}\n            type=\"password\"\n            onBlur={(): void => blurHandler('password')}\n            error={form.password.touched && !form.password.valid}\n            required\n            fullWidth\n            helperText={form.password.touched && !form.password.valid ? 'Password must be over 5 characters long' : ''}\n          />\n        </div>\n        <div className={classes.inputField}>\n          <TextField\n            id=\"confirmPass\"\n            variant=\"outlined\"\n            placeholder=\"confirm password\"\n            value={form.confirmPass.value}\n            onChange={handleInputChange}\n            type=\"password\"\n            onBlur={(): void => blurHandler('confirmPass')}\n            error={form.confirmPass.touched && form.confirmPass.value !== form.password.value}\n            required\n            fullWidth\n            helperText={form.confirmPass.touched && form.confirmPass.value !== form.password.value ? 'Passwords do not match' : ''}\n          />\n        </div>\n        {handleError()}\n        <Button\n          variant=\"contained\"\n          className={classes.submitButton}\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default Signup;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":21,"nodeType":"87","messageId":"88","endLine":5,"endColumn":31},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"90","line":7,"column":9,"nodeType":"87","messageId":"88","endLine":7,"endColumn":15},{"ruleId":"85","severity":1,"message":"91","line":14,"column":11,"nodeType":"87","messageId":"88","endLine":14,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":28,"column":13,"nodeType":"94","endLine":28,"endColumn":66},{"ruleId":"92","severity":1,"message":"93","line":34,"column":13,"nodeType":"94","endLine":34,"endColumn":66},{"ruleId":"92","severity":1,"message":"93","line":37,"column":13,"nodeType":"94","endLine":37,"endColumn":66},{"ruleId":"81","replacedBy":"95"},{"ruleId":"83","replacedBy":"96"},{"ruleId":"85","severity":1,"message":"97","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":16},{"ruleId":"85","severity":1,"message":"90","line":9,"column":9,"nodeType":"87","messageId":"88","endLine":9,"endColumn":15},{"ruleId":"85","severity":1,"message":"98","line":86,"column":9,"nodeType":"87","messageId":"88","endLine":86,"endColumn":18},{"ruleId":"85","severity":1,"message":"99","line":88,"column":11,"nodeType":"87","messageId":"88","endLine":88,"endColumn":21},{"ruleId":"85","severity":1,"message":"97","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"101","line":79,"column":61,"nodeType":"102","messageId":"103","endLine":79,"endColumn":63},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'colors' is defined but never used.","'classes' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["104"],["105"],"'MuiAlert' is defined but never used.","'loginUser' is assigned a value but never used.","'formValues' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]